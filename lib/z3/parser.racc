class Z3Model
  
  options no_result_var

  token VARIABLE CONSTANT VALUE TYPE NUMBER BOOLEAN LABEL FORMAL MAP2 MAP3 WEIRD
  
rule 
  target: mappings
  
  mapping:
    lhs '->' rhs { if val[0] && val[2] then {val[0] => val[2]} else {} end }

  mappings:
    { {} }
    | mapping mappings { val[1].merge val[0] }  
  
  lhs: VARIABLE | CONSTANT | LABEL | FORMAL | MAP2 | MAP3 | WEIRD
  rhs: value | '{' fmappings '}' { val[1] }
  
  fmappings:
    'else' '->' value { Function.new mappings: {nil => val[2]} }
    | values '->' value fmappings { f = val[3]; f[val[0]] = val[2]; f }    
    
  values: value { [val[0]] } | value values { [val[0]] + val[1] }

  value: VALUE | TYPE | literal | WEIRD
  literal: '(' '-' NUMBER ')' { -val[2] } | NUMBER | BOOLEAN
  end

---- header
require_relative 'lexer.rex'
require_relative 'values'
include Z3

---- inner
def parse(input)
  model = scan_str(input)
end

---- footer
