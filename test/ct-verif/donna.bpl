type i1 = int;
type i8 = int;
type i16 = int;
type i24 = int;
type i32 = int;
type i40 = int;
type i48 = int;
type i56 = int;
type i64 = int;
type i96 = int;
type i128 = int;
type ref = i64;
type float = i32;
const $0: i32;
axiom ($0 == 0);
const $0.ref: ref;
axiom ($0.ref == 0);
const $1024.ref: ref;
axiom ($1024.ref == 1024);
var $M.0: [ref] i8;
var $M.1: [ref] i8;
var $M.2: [ref] i32;
axiom ($GLOBALS_BOTTOM == $sub.ref(0,348));
axiom ($EXTERNS_BOTTOM == $sub.ref(0,32768));
function {:inline} $ult.ref(p1: ref, p2: ref) returns (i1) { (if $ult.i64.bool(p1,p2) then 1 else 0) }
function {:inline} $sgt.ref.bool(p1: ref, p2: ref) returns (bool) { $sgt.i64.bool(p1,p2) }
function {:inline} $slt.ref.bool(p1: ref, p2: ref) returns (bool) { $slt.i64.bool(p1,p2) }
function {:inline} $sle.ref.bool(p1: ref, p2: ref) returns (bool) { $sle.i64.bool(p1,p2) }
function {:inline} $add.ref(p1: ref, p2: ref) returns (ref) { $add.i64(p1,p2) }
function {:inline} $sub.ref(p1: ref, p2: ref) returns (ref) { $sub.i64(p1,p2) }
function {:inline} $mul.ref(p1: ref, p2: ref) returns (ref) { $mul.i64(p1,p2) }
const .str1: ref;
axiom (.str1 == $sub.ref(0,16));
const .str2: ref;
axiom (.str2 == $sub.ref(0,30));
const .str3: ref;
axiom (.str3 == $sub.ref(0,44));
const __VERIFIER_assume: ref;
axiom (__VERIFIER_assume == $sub.ref(0,52));
procedure {:inline 1} __VERIFIER_assume(x: i32)
{
$bb0:
  call {:cexpr "x"} boogie_si_record_i32(x);
  call {:cexpr "v"} boogie_si_record_i32(x);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 95, 3} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 31, 21} true;
  assume (x != $0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 32, 1} true;
  $exn := false;
  return;
}
const llvm.dbg.declare: ref;
axiom (llvm.dbg.declare == $sub.ref(0,60));
const __SMACK_dummy: ref;
axiom (__SMACK_dummy == $sub.ref(0,68));
const __SMACK_code: ref;
axiom (__SMACK_code == $sub.ref(0,76));
const llvm.memset.p0i8.i64: ref;
axiom (llvm.memset.p0i8.i64 == $sub.ref(0,84));
const __SMACK_decls: ref;
axiom (__SMACK_decls == $sub.ref(0,92));
function {:inline} $bitcast.ref.ref(i: ref) returns (ref) { i }
function {:inline} $add.i64(i1: i64, i2: i64) returns (i64) { (i1 + i2) }
function {:inline} $add.i32(i1: i32, i2: i32) returns (i32) { (i1 + i2) }
function {:inline} $sub.i64(i1: i64, i2: i64) returns (i64) { (i1 - i2) }
function {:inline} $sub.i32(i1: i32, i2: i32) returns (i32) { (i1 - i2) }
function {:inline} $mul.i64(i1: i64, i2: i64) returns (i64) { (i1 * i2) }
function {:inline} $mul.i32(i1: i32, i2: i32) returns (i32) { (i1 * i2) }
function $shl.i64(i1: i64, i2: i64) returns (i64);
function $shl.i32(i1: i32, i2: i32) returns (i32);
function $lshr.i64(i1: i64, i2: i64) returns (i64);
function $lshr.i32(i1: i32, i2: i32) returns (i32);
function $ashr.i64(i1: i64, i2: i64) returns (i64);
function $ashr.i32(i1: i32, i2: i32) returns (i32);
function $and.i64(i1: i64, i2: i64) returns (i64);
function $and.i32(i1: i32, i2: i32) returns (i32);
function $or.i64(i1: i64, i2: i64) returns (i64);
function $or.i32(i1: i32, i2: i32) returns (i32);
function $xor.i32(i1: i32, i2: i32) returns (i32);
function {:inline} $eq.i32(i1: i32, i2: i32) returns (i1) { (if (i1 == i2) then 1 else 0) }
function {:inline} $ult.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 < i2) }
function {:inline} $ult.i32(i1: i32, i2: i32) returns (i1) { (if (i1 < i2) then 1 else 0) }
function {:inline} $sle.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 <= i2) }
function {:inline} $slt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 < i2) }
function {:inline} $slt.i32(i1: i32, i2: i32) returns (i1) { (if (i1 < i2) then 1 else 0) }
function {:inline} $sgt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 > i2) }
function {:inline} $trunc.i64.i32(i: i64) returns (i32) { i }
function {:inline} $trunc.i32.i8(i: i32) returns (i8) { i }
function {:inline} $zext.i1.i32(i: i1) returns (i32) { i }
function {:inline} $zext.i8.i32(i: i8) returns (i32) { i }
function {:inline} $zext.i8.i64(i: i8) returns (i64) { i }
function {:inline} $zext.i32.i64(i: i32) returns (i64) { i }
function {:inline} $sext.i32.i64(i: i32) returns (i64) { i }
function $foeq.bool(f1: float, f2: float) returns (bool);
function $fp2si.float.i128(f: float) returns (i128);
function $fp2ui.float.i128(f: float) returns (i128);
function $si2fp.i128.float(i: i128) returns (float);
function $ui2fp.i128.float(i: i128) returns (float);
function $fp2si.float.i96(f: float) returns (i96);
function $fp2ui.float.i96(f: float) returns (i96);
function $si2fp.i96.float(i: i96) returns (float);
function $ui2fp.i96.float(i: i96) returns (float);
function $fp2si.float.i64(f: float) returns (i64);
function $fp2ui.float.i64(f: float) returns (i64);
function $si2fp.i64.float(i: i64) returns (float);
function $ui2fp.i64.float(i: i64) returns (float);
function $fp2si.float.i56(f: float) returns (i56);
function $fp2ui.float.i56(f: float) returns (i56);
function $si2fp.i56.float(i: i56) returns (float);
function $ui2fp.i56.float(i: i56) returns (float);
function $fp2si.float.i48(f: float) returns (i48);
function $fp2ui.float.i48(f: float) returns (i48);
function $si2fp.i48.float(i: i48) returns (float);
function $ui2fp.i48.float(i: i48) returns (float);
function $fp2si.float.i40(f: float) returns (i40);
function $fp2ui.float.i40(f: float) returns (i40);
function $si2fp.i40.float(i: i40) returns (float);
function $ui2fp.i40.float(i: i40) returns (float);
function $fp2si.float.i32(f: float) returns (i32);
function $fp2ui.float.i32(f: float) returns (i32);
function $si2fp.i32.float(i: i32) returns (float);
function $ui2fp.i32.float(i: i32) returns (float);
function $fp2si.float.i24(f: float) returns (i24);
function $fp2ui.float.i24(f: float) returns (i24);
function $si2fp.i24.float(i: i24) returns (float);
function $ui2fp.i24.float(i: i24) returns (float);
function $fp2si.float.i16(f: float) returns (i16);
function $fp2ui.float.i16(f: float) returns (i16);
function $si2fp.i16.float(i: i16) returns (float);
function $ui2fp.i16.float(i: i16) returns (float);
function $fp2si.float.i8(f: float) returns (i8);
function $fp2ui.float.i8(f: float) returns (i8);
function $si2fp.i8.float(i: i8) returns (float);
function $ui2fp.i8.float(i: i8) returns (float);
axiom (forall f1, f2: float :: ((f1 != f2) || $foeq.bool(f1,f2)));
axiom (forall i: i128 :: ($fp2ui.float.i128($ui2fp.i128.float(i)) == i));
axiom (forall f: float :: ($ui2fp.i128.float($fp2ui.float.i128(f)) == f));
axiom (forall i: i128 :: ($fp2si.float.i128($si2fp.i128.float(i)) == i));
axiom (forall f: float :: ($si2fp.i128.float($fp2si.float.i128(f)) == f));
axiom (forall i: i96 :: ($fp2ui.float.i96($ui2fp.i96.float(i)) == i));
axiom (forall f: float :: ($ui2fp.i96.float($fp2ui.float.i96(f)) == f));
axiom (forall i: i96 :: ($fp2si.float.i96($si2fp.i96.float(i)) == i));
axiom (forall f: float :: ($si2fp.i96.float($fp2si.float.i96(f)) == f));
axiom (forall i: i64 :: ($fp2ui.float.i64($ui2fp.i64.float(i)) == i));
axiom (forall f: float :: ($ui2fp.i64.float($fp2ui.float.i64(f)) == f));
axiom (forall i: i64 :: ($fp2si.float.i64($si2fp.i64.float(i)) == i));
axiom (forall f: float :: ($si2fp.i64.float($fp2si.float.i64(f)) == f));
axiom (forall i: i56 :: ($fp2ui.float.i56($ui2fp.i56.float(i)) == i));
axiom (forall f: float :: ($ui2fp.i56.float($fp2ui.float.i56(f)) == f));
axiom (forall i: i56 :: ($fp2si.float.i56($si2fp.i56.float(i)) == i));
axiom (forall f: float :: ($si2fp.i56.float($fp2si.float.i56(f)) == f));
axiom (forall i: i48 :: ($fp2ui.float.i48($ui2fp.i48.float(i)) == i));
axiom (forall f: float :: ($ui2fp.i48.float($fp2ui.float.i48(f)) == f));
axiom (forall i: i48 :: ($fp2si.float.i48($si2fp.i48.float(i)) == i));
axiom (forall f: float :: ($si2fp.i48.float($fp2si.float.i48(f)) == f));
axiom (forall i: i40 :: ($fp2ui.float.i40($ui2fp.i40.float(i)) == i));
axiom (forall f: float :: ($ui2fp.i40.float($fp2ui.float.i40(f)) == f));
axiom (forall i: i40 :: ($fp2si.float.i40($si2fp.i40.float(i)) == i));
axiom (forall f: float :: ($si2fp.i40.float($fp2si.float.i40(f)) == f));
axiom (forall i: i32 :: ($fp2ui.float.i32($ui2fp.i32.float(i)) == i));
axiom (forall f: float :: ($ui2fp.i32.float($fp2ui.float.i32(f)) == f));
axiom (forall i: i32 :: ($fp2si.float.i32($si2fp.i32.float(i)) == i));
axiom (forall f: float :: ($si2fp.i32.float($fp2si.float.i32(f)) == f));
axiom (forall i: i24 :: ($fp2ui.float.i24($ui2fp.i24.float(i)) == i));
axiom (forall f: float :: ($ui2fp.i24.float($fp2ui.float.i24(f)) == f));
axiom (forall i: i24 :: ($fp2si.float.i24($si2fp.i24.float(i)) == i));
axiom (forall f: float :: ($si2fp.i24.float($fp2si.float.i24(f)) == f));
axiom (forall i: i16 :: ($fp2ui.float.i16($ui2fp.i16.float(i)) == i));
axiom (forall f: float :: ($ui2fp.i16.float($fp2ui.float.i16(f)) == f));
axiom (forall i: i16 :: ($fp2si.float.i16($si2fp.i16.float(i)) == i));
axiom (forall f: float :: ($si2fp.i16.float($fp2si.float.i16(f)) == f));
axiom (forall i: i8 :: ($fp2ui.float.i8($ui2fp.i8.float(i)) == i));
axiom (forall f: float :: ($ui2fp.i8.float($fp2ui.float.i8(f)) == f));
axiom (forall i: i8 :: ($fp2si.float.i8($si2fp.i8.float(i)) == i));
axiom (forall f: float :: ($si2fp.i8.float($fp2si.float.i8(f)) == f));
const $GLOBALS_BOTTOM: ref;
const $EXTERNS_BOTTOM: ref;
function {:inline} $load.i64(M: [ref] i64, p: ref) returns (i64) { M[p] }
function {:inline} $load.i32(M: [ref] i32, p: ref) returns (i32) { M[p] }
function {:inline} $load.i8(M: [ref] i8, p: ref) returns (i8) { M[p] }
function {:inline} $store.i64(M: [ref] i64, p: ref, v: i64) returns ([ref] i64) { M[p := v] }
function {:inline} $store.i32(M: [ref] i32, p: ref, v: i32) returns ([ref] i32) { M[p := v] }
function {:inline} $store.i8(M: [ref] i8, p: ref, v: i8) returns ([ref] i8) { M[p := v] }
procedure {:inline 45} boogie_si_record_i8(i: i8);
procedure {:inline 45} boogie_si_record_i32(i: i32);
procedure {:inline 45} boogie_si_record_i64(i: i64);
procedure {:inline 45} boogie_si_record_ref(i: ref);
var $Alloc: [ref] bool;
var $CurrAddr: ref;
procedure {:inline 1} $alloc(n: ref) returns (p: ref)
modifies $CurrAddr, $Alloc;
{
  assume $sgt.ref.bool($CurrAddr,$0.ref);
  p := $CurrAddr;
  if ($sgt.ref.bool(n,$0.ref)) {
    $CurrAddr := $add.ref($CurrAddr,n);
  }
  $Alloc[p] := true;
}
var $exn: bool;
const __SMACK_top_decl: ref;
axiom (__SMACK_top_decl == $sub.ref(0,100));
const __SMACK_init_func_memory_model: ref;
axiom (__SMACK_init_func_memory_model == $sub.ref(0,108));
procedure {:inline 45} __SMACK_init_func_memory_model()
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1010, 3} true;
  $CurrAddr := $1024.ref;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 1011, 1} true;
  $exn := false;
  return;
}
const curve25519_donna: ref;
axiom (curve25519_donna == $sub.ref(0,116));
procedure {:inline 45} curve25519_donna(mypublic: ref, secret: ref, basepoint: ref) returns ($r: i32)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $i7: i64;
  var $p8: ref;
  var $i9: i8;
  var $i10: i64;
  var $p11: ref;
  var $i12: i32;
  var $p13: ref;
  var $i14: i8;
  var $i15: i32;
  var $i16: i32;
  var $i17: i8;
  var $p18: ref;
  var $i19: i8;
  var $i20: i32;
  var $i21: i32;
  var $i22: i8;
  var $p23: ref;
  var $i24: i8;
  var $i25: i32;
  var $i26: i32;
  var $i27: i8;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
$bb0:
  call $p0 := $alloc($mul.ref(80,$zext.i32.i64(1)));
  call $p1 := $alloc($mul.ref(80,$zext.i32.i64(1)));
  call $p2 := $alloc($mul.ref(88,$zext.i32.i64(1)));
  call $p3 := $alloc($mul.ref(80,$zext.i32.i64(1)));
  call $p4 := $alloc($mul.ref(32,$zext.i32.i64(1)));
  call {:cexpr "mypublic"} boogie_si_record_ref(mypublic);
  call {:cexpr "secret"} boogie_si_record_ref(secret);
  call {:cexpr "basepoint"} boogie_si_record_ref(basepoint);
  assume true;
  assume true;
  assume true;
  assume true;
  assume true;
  call {:cexpr "i"} boogie_si_record_i32(0);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 849, 8} true;
  $i5 := 0;
  goto $bb1;
$bb1:
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 849, 8} true;
  $i6 := $slt.i32($i5,32);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 849, 8} true;
  assume {:branchcond $i6} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i6 == 1);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 849, 28} true;
  $i7 := $sext.i32.i64($i5);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 849, 28} true;
  $p8 := $add.ref(secret,$mul.ref($i7,1));
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 849, 28} true;
  $i9 := $load.i8($M.0,$p8);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 849, 28} true;
  $i10 := $sext.i32.i64($i5);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 849, 28} true;
  $p11 := $add.ref($p4,$mul.ref($i10,1));
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 849, 28} true;
  $M.1 := $store.i8($M.1,$p11,$i9);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 849, 23} true;
  $i12 := $add.i32($i5,1);
  call {:cexpr "i"} boogie_si_record_i32($i12);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 849, 23} true;
  $i5 := $i12;
  goto $bb1;
$bb3:
  assume !($i6 == 1);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 850, 3} true;
  $p13 := $p4;
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 850, 3} true;
  $i14 := $load.i8($M.1,$p13);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 850, 3} true;
  $i15 := $zext.i8.i32($i14);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 850, 3} true;
  $i16 := $and.i32($i15,248);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 850, 3} true;
  $i17 := $trunc.i32.i8($i16);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 850, 3} true;
  $M.1 := $store.i8($M.1,$p13,$i17);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 851, 3} true;
  $p18 := $add.ref($p4,31);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 851, 3} true;
  $i19 := $load.i8($M.1,$p18);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 851, 3} true;
  $i20 := $zext.i8.i32($i19);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 851, 3} true;
  $i21 := $and.i32($i20,127);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 851, 3} true;
  $i22 := $trunc.i32.i8($i21);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 851, 3} true;
  $M.1 := $store.i8($M.1,$p18,$i22);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 852, 3} true;
  $p23 := $add.ref($p4,31);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 852, 3} true;
  $i24 := $load.i8($M.1,$p23);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 852, 3} true;
  $i25 := $zext.i8.i32($i24);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 852, 3} true;
  $i26 := $or.i32($i25,64);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 852, 3} true;
  $i27 := $trunc.i32.i8($i26);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 852, 3} true;
  $M.1 := $store.i8($M.1,$p23,$i27);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 854, 3} true;
  $p28 := $p0;
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 854, 3} true;
  call fexpand($p28, basepoint);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 855, 3} true;
  $p29 := $p1;
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 855, 3} true;
  $p30 := $p2;
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 855, 3} true;
  $p31 := $p4;
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 855, 3} true;
  $p32 := $p0;
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 855, 3} true;
  call cmult($p29, $p30, $p31, $p32);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 856, 3} true;
  $p33 := $p3;
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 856, 3} true;
  $p34 := $p2;
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 856, 3} true;
  call crecip($p33, $p34);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 857, 3} true;
  $p35 := $p2;
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 857, 3} true;
  $p36 := $p1;
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 857, 3} true;
  $p37 := $p3;
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 857, 3} true;
  call fmul($p35, $p36, $p37);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 858, 3} true;
  $p38 := $p2;
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 858, 3} true;
  call fcontract(mypublic, $p38);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 859, 3} true;
  $r := 0;
  $exn := false;
  return;
}
const __memcpy_chk: ref;
axiom (__memcpy_chk == $sub.ref(0,124));
procedure {:inline 45} __memcpy_chk($p0: ref, $p1: ref, $i2: i64, $i3: i64) returns ($r: ref);
const llvm.objectsize.i64.p0i8: ref;
axiom (llvm.objectsize.i64.p0i8 == $sub.ref(0,132));
procedure {:inline 45} llvm.objectsize.i64.p0i8($p0: ref, $i1: i1) returns ($r: i64);
const llvm.memcpy.p0i8.p0i8.i64: ref;
axiom (llvm.memcpy.p0i8.p0i8.i64 == $sub.ref(0,140));
const fexpand: ref;
axiom (fexpand == $sub.ref(0,148));
procedure {:inline 45} fexpand(output: ref, input: ref);
const cmult: ref;
axiom (cmult == $sub.ref(0,156));
procedure {:inline 45} cmult(resultx: ref, resultz: ref, n: ref, q: ref)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: i64;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $i45: i32;
  var $i46: i1;
  var $i47: i32;
  var $i48: i64;
  var $p49: ref;
  var $i50: i8;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $i59: i32;
  var $i60: i8;
  var $i61: i1;
  var $i62: i32;
  var $i63: i32;
  var $i64: i64;
  var $i65: i32;
  var $i66: i32;
  var $i67: i8;
  var $i68: i32;
  var $i69: i32;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $i73: i64;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $i78: i64;
  var $p79: ref;
$bb0:
  call $p0 := $alloc($mul.ref(152,$zext.i32.i64(1)));
  call $p1 := $alloc($mul.ref(152,$zext.i32.i64(1)));
  call $p2 := $alloc($mul.ref(152,$zext.i32.i64(1)));
  call $p3 := $alloc($mul.ref(152,$zext.i32.i64(1)));
  call $p4 := $alloc($mul.ref(152,$zext.i32.i64(1)));
  call $p5 := $alloc($mul.ref(152,$zext.i32.i64(1)));
  call $p6 := $alloc($mul.ref(152,$zext.i32.i64(1)));
  call $p7 := $alloc($mul.ref(152,$zext.i32.i64(1)));
  call {:cexpr "resultx"} boogie_si_record_ref(resultx);
  call {:cexpr "resultz"} boogie_si_record_ref(resultz);
  call {:cexpr "n"} boogie_si_record_ref(n);
  call {:cexpr "q"} boogie_si_record_ref(q);
  assume true;
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 728, 3} true;
  $p8 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 728, 3} true;
  call $M.0 := $memset.i8($M.0, $p8, 0, 152, $zext.i32.i64(16), (0 == 1));
  assume true;
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 728, 3} true;
  $p9 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 728, 3} true;
  call $M.0 := $memset.i8($M.0, $p9, 0, 152, $zext.i32.i64(16), (0 == 1));
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 728, 3} true;
  $p10 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 728, 3} true;
  $p11 := $p10;
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 728, 3} true;
  $M.0 := $store.i64($M.0,$p11,1);
  assume true;
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 728, 3} true;
  $p12 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 728, 3} true;
  call $M.0 := $memset.i8($M.0, $p12, 0, 152, $zext.i32.i64(16), (0 == 1));
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 728, 3} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 728, 3} true;
  $p14 := $p13;
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 728, 3} true;
  $M.0 := $store.i64($M.0,$p14,1);
  assume true;
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 728, 3} true;
  $p15 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 728, 3} true;
  call $M.0 := $memset.i8($M.0, $p15, 0, 152, $zext.i32.i64(16), (0 == 1));
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 729, 3} true;
  $p16 := $p0;
  call {:cexpr "nqpqx"} boogie_si_record_ref($p16);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 729, 3} true;
  $p17 := $p1;
  call {:cexpr "nqpqz"} boogie_si_record_ref($p17);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 729, 3} true;
  $p18 := $p2;
  call {:cexpr "nqx"} boogie_si_record_ref($p18);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 729, 3} true;
  $p19 := $p3;
  call {:cexpr "nqz"} boogie_si_record_ref($p19);
  assume true;
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 730, 3} true;
  $p20 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 730, 3} true;
  call $M.0 := $memset.i8($M.0, $p20, 0, 152, $zext.i32.i64(16), (0 == 1));
  assume true;
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 730, 3} true;
  $p21 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 730, 3} true;
  call $M.0 := $memset.i8($M.0, $p21, 0, 152, $zext.i32.i64(16), (0 == 1));
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 730, 3} true;
  $p22 := $bitcast.ref.ref($p21);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 730, 3} true;
  $p23 := $p22;
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 730, 3} true;
  $M.0 := $store.i64($M.0,$p23,1);
  assume true;
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 730, 3} true;
  $p24 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 730, 3} true;
  call $M.0 := $memset.i8($M.0, $p24, 0, 152, $zext.i32.i64(16), (0 == 1));
  assume true;
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 730, 3} true;
  $p25 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 730, 3} true;
  call $M.0 := $memset.i8($M.0, $p25, 0, 152, $zext.i32.i64(16), (0 == 1));
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 730, 3} true;
  $p26 := $bitcast.ref.ref($p25);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 730, 3} true;
  $p27 := $p26;
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 730, 3} true;
  $M.0 := $store.i64($M.0,$p27,1);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 731, 3} true;
  $p28 := $p4;
  call {:cexpr "nqpqx2"} boogie_si_record_ref($p28);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 731, 3} true;
  $p29 := $p5;
  call {:cexpr "nqpqz2"} boogie_si_record_ref($p29);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 731, 3} true;
  $p30 := $p6;
  call {:cexpr "nqx2"} boogie_si_record_ref($p30);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 731, 3} true;
  $p31 := $p7;
  call {:cexpr "nqz2"} boogie_si_record_ref($p31);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 735, 3} true;
  $p32 := $bitcast.ref.ref($p16);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 735, 3} true;
  $p33 := $bitcast.ref.ref(q);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 735, 3} true;
  $p34 := $bitcast.ref.ref($p16);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 735, 3} true;
  call $i35 := llvm.objectsize.i64.p0i8($p34, 0);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 735, 3} true;
  call $p36 := __memcpy_chk($p32, $p33, 80, $i35);
  call {:cexpr "i"} boogie_si_record_i32(0);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 737, 8} true;
  $p37, $p38, $p39, $p40, $p41, $p42, $p43, $p44, $i45 := $p29, $p28, $p30, $p19, $p18, $p17, $p16, $p31, 0;
  goto $bb1;
$bb1:
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 737, 8} true;
  $i46 := $ult.i32($i45,32);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 737, 8} true;
  assume {:branchcond $i46} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i46 == 1);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 738, 5} true;
  $i47 := $sub.i32(31,$i45);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 738, 5} true;
  $i48 := $zext.i32.i64($i47);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 738, 5} true;
  $p49 := $add.ref(n,$mul.ref($i48,1));
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 738, 5} true;
  $i50 := $load.i8($M.1,$p49);
  call {:cexpr "byte"} boogie_si_record_i8($i50);
  call {:cexpr "j"} boogie_si_record_i32(0);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 739, 10} true;
  $p51, $p52, $p53, $p54, $p55, $p56, $p57, $p58, $i59, $i60 := $p37, $p38, $p39, $p40, $p41, $p42, $p43, $p44, 0, $i50;
  goto $bb4;
$bb3:
  assume !($i46 == 1);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 769, 3} true;
  $p70 := $bitcast.ref.ref(resultx);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 769, 3} true;
  $p71 := $bitcast.ref.ref($p41);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 769, 3} true;
  $p72 := $bitcast.ref.ref(resultx);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 769, 3} true;
  call $i73 := llvm.objectsize.i64.p0i8($p72, 0);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 769, 3} true;
  call $p74 := __memcpy_chk($p70, $p71, 80, $i73);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 770, 3} true;
  $p75 := $bitcast.ref.ref(resultz);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 770, 3} true;
  $p76 := $bitcast.ref.ref($p40);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 770, 3} true;
  $p77 := $bitcast.ref.ref(resultz);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 770, 3} true;
  call $i78 := llvm.objectsize.i64.p0i8($p77, 0);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 770, 3} true;
  call $p79 := __memcpy_chk($p75, $p76, 80, $i78);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 771, 1} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 739, 10} true;
  $i61 := $ult.i32($i59,8);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 739, 10} true;
  assume {:branchcond $i61} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i61 == 1);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 740, 7} true;
  $i62 := $zext.i8.i32($i60);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 740, 7} true;
  $i63 := $ashr.i32($i62,7);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 740, 7} true;
  $i64 := $sext.i32.i64($i63);
  call {:cexpr "bit"} boogie_si_record_i64($i64);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 742, 7} true;
  call swap_conditional($p55, $p57, $i64);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 743, 7} true;
  call swap_conditional($p54, $p56, $i64);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 744, 7} true;
  call fmonty($p53, $p58, $p52, $p51, $p55, $p54, $p57, $p56, q);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 749, 7} true;
  call swap_conditional($p53, $p52, $i64);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 750, 7} true;
  call swap_conditional($p58, $p51, $i64);
  call {:cexpr "t"} boogie_si_record_ref($p55);
  call {:cexpr "nqx"} boogie_si_record_ref($p53);
  call {:cexpr "nqx2"} boogie_si_record_ref($p55);
  call {:cexpr "t"} boogie_si_record_ref($p54);
  call {:cexpr "nqz"} boogie_si_record_ref($p58);
  call {:cexpr "nqz2"} boogie_si_record_ref($p54);
  call {:cexpr "t"} boogie_si_record_ref($p57);
  call {:cexpr "nqpqx"} boogie_si_record_ref($p52);
  call {:cexpr "nqpqx2"} boogie_si_record_ref($p57);
  call {:cexpr "t"} boogie_si_record_ref($p56);
  call {:cexpr "nqpqz"} boogie_si_record_ref($p51);
  call {:cexpr "nqpqz2"} boogie_si_record_ref($p56);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 765, 7} true;
  $i65 := $zext.i8.i32($i60);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 765, 7} true;
  $i66 := $shl.i32($i65,1);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 765, 7} true;
  $i67 := $trunc.i32.i8($i66);
  call {:cexpr "byte"} boogie_si_record_i8($i67);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 739, 24} true;
  $i68 := $add.i32($i59,1);
  call {:cexpr "j"} boogie_si_record_i32($i68);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 739, 24} true;
  $p51, $p52, $p53, $p54, $p55, $p56, $p57, $p58, $i59, $i60 := $p56, $p57, $p55, $p58, $p53, $p51, $p52, $p54, $i68, $i67;
  goto $bb4;
$bb6:
  assume !($i61 == 1);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 737, 23} true;
  $i69 := $add.i32($i45,1);
  call {:cexpr "i"} boogie_si_record_i32($i69);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 737, 23} true;
  $p37, $p38, $p39, $p40, $p41, $p42, $p43, $p44, $i45 := $p51, $p52, $p53, $p54, $p55, $p56, $p57, $p58, $i69;
  goto $bb1;
}
const crecip: ref;
axiom (crecip == $sub.ref(0,164));
procedure {:inline 45} crecip(out: ref, z: ref);
const fmul: ref;
axiom (fmul == $sub.ref(0,172));
procedure {:inline 45} fmul(output: ref, in: ref, in2: ref);
const fcontract: ref;
axiom (fcontract == $sub.ref(0,180));
procedure {:inline 45} fcontract(output: ref, input_limbs: ref);
const s32_eq: ref;
axiom (s32_eq == $sub.ref(0,188));
procedure {:inline 45} s32_eq(a: i32, b: i32) returns ($r: i32);
const s32_gte: ref;
axiom (s32_gte == $sub.ref(0,196));
procedure {:inline 45} s32_gte(a: i32, b: i32) returns ($r: i32);
const freduce_coefficients: ref;
axiom (freduce_coefficients == $sub.ref(0,204));
procedure {:inline 45} freduce_coefficients(output: ref);
const div_by_2_25: ref;
axiom (div_by_2_25 == $sub.ref(0,212));
procedure {:inline 45} div_by_2_25(v: i64) returns ($r: i64);
const div_by_2_26: ref;
axiom (div_by_2_26 == $sub.ref(0,220));
procedure {:inline 45} div_by_2_26(v: i64) returns ($r: i64);
const freduce_degree: ref;
axiom (freduce_degree == $sub.ref(0,228));
procedure {:inline 45} freduce_degree(output: ref);
const fproduct: ref;
axiom (fproduct == $sub.ref(0,236));
procedure {:inline 45} fproduct(output: ref, in2: ref, in: ref);
const fsquare_inner: ref;
axiom (fsquare_inner == $sub.ref(0,252));
procedure {:inline 45} fsquare_inner(output: ref, in: ref);
const fmonty: ref;
axiom (fmonty == $sub.ref(0,260));
procedure {:inline 45} fmonty(x2: ref, z2: ref, x3: ref, z3: ref, x: ref, z: ref, xprime: ref, zprime: ref, qmqp: ref);
const fscalar_product: ref;
axiom (fscalar_product == $sub.ref(0,268));
procedure {:inline 45} fscalar_product(output: ref, in: ref, scalar: i64)
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i64;
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $i8: i32;
$bb0:
  call {:cexpr "output"} boogie_si_record_ref(output);
  call {:cexpr "in"} boogie_si_record_ref(in);
  call {:cexpr "scalar"} boogie_si_record_i64(scalar);
  call {:cexpr "i"} boogie_si_record_i32(0);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 88, 8} true;
  $i0 := 0;
  goto $bb1;
$bb1:
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 88, 8} true;
  $i1 := $ult.i32($i0,10);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 88, 8} true;
  assume {:branchcond $i1} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i1 == 1);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 89, 5} true;
  $i2 := $zext.i32.i64($i0);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 89, 5} true;
  $p3 := $add.ref(in,$mul.ref($i2,8));
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 89, 5} true;
  $i4 := $load.i64($M.0,$p3);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 89, 5} true;
  $i5 := $mul.i64($i4,scalar);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 89, 5} true;
  $i6 := $zext.i32.i64($i0);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 89, 5} true;
  $p7 := $add.ref(output,$mul.ref($i6,8));
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 89, 5} true;
  $M.0 := $store.i64($M.0,$p7,$i5);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 88, 23} true;
  $i8 := $add.i32($i0,1);
  call {:cexpr "i"} boogie_si_record_i32($i8);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 88, 23} true;
  $i0 := $i8;
  goto $bb1;
$bb3:
  assume !($i1 == 1);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 91, 1} true;
  $exn := false;
  return;
}
const fdifference: ref;
axiom (fdifference == $sub.ref(0,276));
procedure {:inline 45} fdifference(output: ref, in: ref)
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i64;
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $i7: i64;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $i11: i32;
$bb0:
  call {:cexpr "output"} boogie_si_record_ref(output);
  call {:cexpr "in"} boogie_si_record_ref(in);
  call {:cexpr "i"} boogie_si_record_i32(0);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 80, 8} true;
  $i0 := 0;
  goto $bb1;
$bb1:
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 80, 8} true;
  $i1 := $ult.i32($i0,10);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 80, 8} true;
  assume {:branchcond $i1} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i1 == 1);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 81, 5} true;
  $i2 := $zext.i32.i64($i0);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 81, 5} true;
  $p3 := $add.ref(in,$mul.ref($i2,8));
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 81, 5} true;
  $i4 := $load.i64($M.0,$p3);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 81, 5} true;
  $i5 := $zext.i32.i64($i0);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 81, 5} true;
  $p6 := $add.ref(output,$mul.ref($i5,8));
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 81, 5} true;
  $i7 := $load.i64($M.0,$p6);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 81, 5} true;
  $i8 := $sub.i64($i4,$i7);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 81, 5} true;
  $i9 := $zext.i32.i64($i0);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 81, 5} true;
  $p10 := $add.ref(output,$mul.ref($i9,8));
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 81, 5} true;
  $M.0 := $store.i64($M.0,$p10,$i8);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 80, 23} true;
  $i11 := $add.i32($i0,1);
  call {:cexpr "i"} boogie_si_record_i32($i11);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 80, 23} true;
  $i0 := $i11;
  goto $bb1;
$bb3:
  assume !($i1 == 1);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 83, 1} true;
  $exn := false;
  return;
}
const fsum: ref;
axiom (fsum == $sub.ref(0,284));
procedure {:inline 45} fsum(output: ref, in: ref)
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i32;
  var $i3: i64;
  var $p4: ref;
  var $i5: i64;
  var $i6: i32;
  var $i7: i64;
  var $p8: ref;
  var $i9: i64;
  var $i10: i64;
  var $i11: i32;
  var $i12: i64;
  var $p13: ref;
  var $i14: i32;
  var $i15: i64;
  var $p16: ref;
  var $i17: i64;
  var $i18: i32;
  var $i19: i64;
  var $p20: ref;
  var $i21: i64;
  var $i22: i64;
  var $i23: i32;
  var $i24: i64;
  var $p25: ref;
  var $i26: i32;
$bb0:
  call {:cexpr "output"} boogie_si_record_ref(output);
  call {:cexpr "in"} boogie_si_record_ref(in);
  call {:cexpr "i"} boogie_si_record_i32(0);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 70, 8} true;
  $i0 := 0;
  goto $bb1;
$bb1:
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 70, 8} true;
  $i1 := $ult.i32($i0,10);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 70, 8} true;
  assume {:branchcond $i1} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i1 == 1);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 71, 5} true;
  $i2 := $add.i32(0,$i0);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 71, 5} true;
  $i3 := $zext.i32.i64($i2);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 71, 5} true;
  $p4 := $add.ref(output,$mul.ref($i3,8));
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 71, 5} true;
  $i5 := $load.i64($M.0,$p4);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 71, 5} true;
  $i6 := $add.i32(0,$i0);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 71, 5} true;
  $i7 := $zext.i32.i64($i6);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 71, 5} true;
  $p8 := $add.ref(in,$mul.ref($i7,8));
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 71, 5} true;
  $i9 := $load.i64($M.0,$p8);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 71, 5} true;
  $i10 := $add.i64($i5,$i9);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 71, 5} true;
  $i11 := $add.i32(0,$i0);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 71, 5} true;
  $i12 := $zext.i32.i64($i11);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 71, 5} true;
  $p13 := $add.ref(output,$mul.ref($i12,8));
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 71, 5} true;
  $M.0 := $store.i64($M.0,$p13,$i10);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 72, 5} true;
  $i14 := $add.i32(1,$i0);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 72, 5} true;
  $i15 := $zext.i32.i64($i14);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 72, 5} true;
  $p16 := $add.ref(output,$mul.ref($i15,8));
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 72, 5} true;
  $i17 := $load.i64($M.0,$p16);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 72, 5} true;
  $i18 := $add.i32(1,$i0);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 72, 5} true;
  $i19 := $zext.i32.i64($i18);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 72, 5} true;
  $p20 := $add.ref(in,$mul.ref($i19,8));
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 72, 5} true;
  $i21 := $load.i64($M.0,$p20);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 72, 5} true;
  $i22 := $add.i64($i17,$i21);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 72, 5} true;
  $i23 := $add.i32(1,$i0);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 72, 5} true;
  $i24 := $zext.i32.i64($i23);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 72, 5} true;
  $p25 := $add.ref(output,$mul.ref($i24,8));
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 72, 5} true;
  $M.0 := $store.i64($M.0,$p25,$i22);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 70, 23} true;
  $i26 := $add.i32($i0,2);
  call {:cexpr "i"} boogie_si_record_i32($i26);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 70, 23} true;
  $i0 := $i26;
  goto $bb1;
$bb3:
  assume !($i1 == 1);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 74, 1} true;
  $exn := false;
  return;
}
const swap_conditional: ref;
axiom (swap_conditional == $sub.ref(0,292));
procedure {:inline 45} swap_conditional(a: ref, b: ref, iswap: i64)
{
  var $i0: i64;
  var $i1: i32;
  var $i2: i32;
  var $i3: i1;
  var $i4: i64;
  var $p5: ref;
  var $i6: i64;
  var $i7: i32;
  var $i8: i64;
  var $p9: ref;
  var $i10: i64;
  var $i11: i32;
  var $i12: i32;
  var $i13: i32;
  var $i14: i64;
  var $p15: ref;
  var $i16: i64;
  var $i17: i32;
  var $i18: i32;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $i22: i64;
  var $p23: ref;
  var $i24: i64;
  var $i25: i32;
  var $i26: i32;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $i30: i32;
$bb0:
  call {:cexpr "a"} boogie_si_record_ref(a);
  call {:cexpr "b"} boogie_si_record_ref(b);
  call {:cexpr "iswap"} boogie_si_record_i64(iswap);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 712, 3} true;
  $i0 := $sub.i64(0,iswap);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 712, 3} true;
  $i1 := $trunc.i64.i32($i0);
  call {:cexpr "swap"} boogie_si_record_i32($i1);
  call {:cexpr "i"} boogie_si_record_i32(0);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 714, 8} true;
  $i2 := 0;
  goto $bb1;
$bb1:
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 714, 8} true;
  $i3 := $ult.i32($i2,10);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 714, 8} true;
  assume {:branchcond $i3} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i3 == 1);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 715, 5} true;
  $i4 := $zext.i32.i64($i2);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 715, 5} true;
  $p5 := $add.ref(a,$mul.ref($i4,8));
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 715, 5} true;
  $i6 := $load.i64($M.0,$p5);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 715, 5} true;
  $i7 := $trunc.i64.i32($i6);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 715, 5} true;
  $i8 := $zext.i32.i64($i2);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 715, 5} true;
  $p9 := $add.ref(b,$mul.ref($i8,8));
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 715, 5} true;
  $i10 := $load.i64($M.0,$p9);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 715, 5} true;
  $i11 := $trunc.i64.i32($i10);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 715, 5} true;
  $i12 := $xor.i32($i7,$i11);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 715, 5} true;
  $i13 := $and.i32($i1,$i12);
  call {:cexpr "x"} boogie_si_record_i32($i13);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 716, 5} true;
  $i14 := $zext.i32.i64($i2);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 716, 5} true;
  $p15 := $add.ref(a,$mul.ref($i14,8));
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 716, 5} true;
  $i16 := $load.i64($M.0,$p15);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 716, 5} true;
  $i17 := $trunc.i64.i32($i16);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 716, 5} true;
  $i18 := $xor.i32($i17,$i13);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 716, 5} true;
  $i19 := $sext.i32.i64($i18);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 716, 5} true;
  $i20 := $zext.i32.i64($i2);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 716, 5} true;
  $p21 := $add.ref(a,$mul.ref($i20,8));
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 716, 5} true;
  $M.0 := $store.i64($M.0,$p21,$i19);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 717, 5} true;
  $i22 := $zext.i32.i64($i2);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 717, 5} true;
  $p23 := $add.ref(b,$mul.ref($i22,8));
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 717, 5} true;
  $i24 := $load.i64($M.0,$p23);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 717, 5} true;
  $i25 := $trunc.i64.i32($i24);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 717, 5} true;
  $i26 := $xor.i32($i25,$i13);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 717, 5} true;
  $i27 := $sext.i32.i64($i26);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 717, 5} true;
  $i28 := $zext.i32.i64($i2);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 717, 5} true;
  $p29 := $add.ref(b,$mul.ref($i28,8));
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 717, 5} true;
  $M.0 := $store.i64($M.0,$p29,$i27);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 714, 23} true;
  $i30 := $add.i32($i2,1);
  call {:cexpr "i"} boogie_si_record_i32($i30);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 714, 23} true;
  $i2 := $i30;
  goto $bb1;
$bb3:
  assume !($i3 == 1);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna/curve25519-donna.c", 719, 1} true;
  $exn := false;
  return;
}
const curve25519_donna_wrapper: ref;
axiom (curve25519_donna_wrapper == $sub.ref(0,300));
procedure {:entrypoint} curve25519_donna_wrapper(mypublic: ref, secret: ref, basepoint: ref) returns ($r: i32)
{
  var $p0: ref;
  var $i1: i1;
  var $p3: ref;
  var $i4: i1;
  var $i2: i1;
  var $i5: i32;
  var $p6: ref;
  var $i7: i1;
  var $p9: ref;
  var $i10: i1;
  var $i8: i1;
  var $i11: i32;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
$bb0:
  call $initialize();
  call {:cexpr "mypublic"} boogie_si_record_ref(mypublic);
  call {:cexpr "secret"} boogie_si_record_ref(secret);
  call {:cexpr "basepoint"} boogie_si_record_ref(basepoint);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 17, 3} true;
  $p0 := $add.ref(mypublic,32);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 17, 3} true;
  $i1 := $ult.ref($p0,secret);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 17, 3} true;
  $i2 := 1;
  assume {:branchcond $i1} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 17, 3} true;
  assume ($i1 == 1);
  goto $bb2;
$bb2:
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 17, 3} true;
  $i5 := $zext.i1.i32($i2);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 17, 3} true;
  call __VERIFIER_assume($i5);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 18, 3} true;
  $p6 := $add.ref(basepoint,32);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 18, 3} true;
  $i7 := $ult.ref($p6,secret);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 18, 3} true;
  $i8 := 1;
  assume {:branchcond $i7} true;
  goto $bb4, $bb6;
$bb3:
  assume !($i1 == 1);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 17, 3} true;
  $p3 := $add.ref(secret,32);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 17, 3} true;
  $i4 := $ult.ref($p3,mypublic);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 17, 3} true;
  $i2 := $i4;
  goto $bb2;
$bb4:
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 18, 3} true;
  assume ($i7 == 1);
  goto $bb5;
$bb5:
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 18, 3} true;
  $i11 := $zext.i1.i32($i8);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 18, 3} true;
  call __VERIFIER_assume($i11);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 21, 13} true;
  call {:name mypublic} $p12 := __SMACK_value.ref(mypublic);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 21, 3} true;
  call public_in($p12);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 22, 13} true;
  call {:name secret} $p13 := __SMACK_value.ref(secret);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 22, 3} true;
  call public_in($p13);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 23, 13} true;
  call {:name basepoint} $p14 := __SMACK_value.ref(basepoint);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 23, 3} true;
  call public_in($p14);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 26, 13} true;
  call {:name basepoint} {:array "$load.i8", $M.0, basepoint, 1, 32} $p15 := __SMACK_values(basepoint, 32);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 26, 3} true;
  call public_in($p15);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 27, 20} true;
  call {:name mypublic} {:array "$load.i8", $M.0, mypublic, 1, 32} $p16 := __SMACK_values(mypublic, 32);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 27, 3} true;
  call declassified_out($p16);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 30, 10} true;
  call $i17 := curve25519_donna(mypublic, secret, basepoint);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 30, 10} true;
  $r := $i17;
  $exn := false;
  return;
$bb6:
  assume !($i7 == 1);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 18, 3} true;
  $p9 := $add.ref(secret,32);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 18, 3} true;
  $i10 := $ult.ref($p9,basepoint);
  assume {:sourceloc "/Users/mje/Code/ct-verif/examples/curve25519-donna/donna.c", 18, 3} true;
  $i8 := $i10;
  goto $bb5;
}
const public_in: ref;
axiom (public_in == $sub.ref(0,308));
procedure {:inline 45} public_in($p0: ref);
const __SMACK_value: ref;
axiom (__SMACK_value == $sub.ref(0,316));
procedure {:inline 45} __SMACK_value.ref(p.0: ref) returns ($r: ref);
const __SMACK_values: ref;
axiom (__SMACK_values == $sub.ref(0,324));
procedure {:inline 45} __SMACK_values($p0: ref, $i1: i32) returns ($r: ref);
const declassified_out: ref;
axiom (declassified_out == $sub.ref(0,332));
procedure {:inline 45} declassified_out($p0: ref);
const llvm.dbg.value: ref;
axiom (llvm.dbg.value == $sub.ref(0,340));
const __SMACK_static_init: ref;
axiom (__SMACK_static_init == $sub.ref(0,348));
procedure {:inline 45} __SMACK_static_init()
{
$bb0:
  $exn := false;
  return;
}
procedure {:inline 1} $memcpy.i8(M.dst: [ref] i8, M.src: [ref] i8, dst: ref, src: ref, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref] i8)
{
  assume (forall x: ref :: (($sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len))) ==> (M.ret[x] == M.src[$add.ref($sub.ref(src,dst),x)])));
  assume (forall x: ref :: ($slt.ref.bool(x,dst) ==> (M.ret[x] == M.dst[x])));
  assume (forall x: ref :: ($sle.ref.bool($add.ref(dst,len),x) ==> (M.ret[x] == M.dst[x])));
}
procedure {:inline 1} $memset.i8(M: [ref] i8, dst: ref, val: i8, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref] i8)
{
  assume (forall x: ref :: (($sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len))) ==> (M.ret[x] == val)));
  assume (forall x: ref :: ($slt.ref.bool(x,dst) ==> (M.ret[x] == M[x])));
  assume (forall x: ref :: ($sle.ref.bool($add.ref(dst,len),x) ==> (M.ret[x] == M[x])));
}
procedure {:inline 45} $initialize()
{
  call __SMACK_static_init();
  call __SMACK_init_func_memory_model();
  return;
}