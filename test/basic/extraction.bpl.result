function f(bool) returns (bool);

procedure main()
{
  var x: bool;

  call x := $loop.1(x);

  while (x) {
    x := f(x);
  }

  goto head1;

head1:
  goto body1, exit1;

body1:
  assume x;
  x := f(x);
  goto head1;

exit1:
  assume !x;
  goto head2;

head2:
  call x := $loop.2(x);
  goto exit2;

exit2:
  return;

}

procedure $loop.1(x.0: bool) returns (x: bool)
requires true;
ensures true;
ensures !x;
{
  x := x.0;
  while (x)
  invariant true;
  {
    x := f(x);
  }
}

procedure $loop.2(x.0: bool) returns (x: bool)
requires true;
ensures true;
{
  x := x.0;
  x := f(x);
}
